% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/07_with_pb.R
\name{with_pb}
\alias{with_pb}
\title{with_pb tag to use progress bar with functionals}
\usage{
with_pb(format = "[:bar] :percent", width = options("width")[[1]] - 2,
  complete = "=", incomplete = "-", current = ">",
  callback = invisible, clear = TRUE, show_after = 0.2,
  force = FALSE, message = NULL, tokens = alist(), FUN_ARG = NULL)
}
\arguments{
\item{format}{The format of the progress bar. A number of tokens can be used
here, see them below. It defaults to "\link{:bar} :percent", which means that
the progress bar is within brackets on the left, and the percentage is
printed on the right.}

\item{width}{Width of the progress bar.}

\item{complete}{Completion character.}

\item{incomplete}{Incomplete character.}

\item{current}{Current character.}

\item{callback}{Callback function to call when the progress bar finishes.
The progress bar object itself is passed to it as the single parameter.}

\item{clear}{Whether to clear the progress bar on completion.}

\item{show_after}{Amount of time in seconds, after which the progress bar is
shown on the screen. For very short processes, it is probably not worth
showing it at all.}

\item{force}{Whether to force showing the progress bar, even if the given (or default) stream does not seem to support it.}

\item{message}{A message to display on top of the bar}

\item{tokens}{A list of unevaluated expressions, using \code{alist}, to be passed
passed to the \code{tick} method of the progress bar}

\item{FUN_ARG}{name or position of function arg, by default looks for the
first argument that is either \code{FUN}, \code{.f} or \code{f}}
}
\description{
with_pb tag to use progress bar with functionals
}
\examples{
with_pb$map(1:5, ~{Sys.sleep(1);.x*2})
with_pb(format = "[:bar] :eta")$lapply(1:5, function(x) {Sys.sleep(1);x*2})
}
